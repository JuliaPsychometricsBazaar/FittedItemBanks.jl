var documenterSearchIndex = {"docs":
[{"location":"parametric/#Parametric-item-banks","page":"Parametric item banks","title":"Parametric item banks","text":"","category":"section"},{"location":"parametric/","page":"Parametric item banks","title":"Parametric item banks","text":"Parametric IRT models","category":"page"},{"location":"parametric/#High-level-item-banks","page":"Parametric item banks","title":"High-level item banks","text":"","category":"section"},{"location":"parametric/","page":"Parametric item banks","title":"Parametric item banks","text":"The high-level item banks provide shortcuts for common IRT parameterisations.","category":"page"},{"location":"parametric/#FittedItemBanks.ItemBank2PL-Tuple{Any, Any}","page":"Parametric item banks","title":"FittedItemBanks.ItemBank2PL","text":"Convenience function to construct an item bank of the standard 2-parameter logistic single-dimensional IRT model.\n\n\n\n\n\n","category":"method"},{"location":"parametric/#FittedItemBanks.ItemBank3PL-Tuple{Any, Any, Any}","page":"Parametric item banks","title":"FittedItemBanks.ItemBank3PL","text":"Convenience function to construct an item bank of the standard 3-parameter logistic single-dimensional IRT model.\n\n\n\n\n\n","category":"method"},{"location":"parametric/#FittedItemBanks.ItemBank4PL-NTuple{4, Any}","page":"Parametric item banks","title":"FittedItemBanks.ItemBank4PL","text":"Convenience function to construct an item bank of the standard 4-parameter logistic single-dimensional IRT model.\n\n\n\n\n\n","category":"method"},{"location":"parametric/#FittedItemBanks.ItemBankMirt2PL-Tuple{Any, Any}","page":"Parametric item banks","title":"FittedItemBanks.ItemBankMirt2PL","text":"Convenience function to construct an item bank of the standard 2-parameter logistic MIRT model.\n\n\n\n\n\n","category":"method"},{"location":"parametric/#FittedItemBanks.ItemBankMirt3PL-Tuple{Any, Any, Any}","page":"Parametric item banks","title":"FittedItemBanks.ItemBankMirt3PL","text":"Convenience function to construct an item bank of the standard 3-parameter logistic MIRT model.\n\n\n\n\n\n","category":"method"},{"location":"parametric/#FittedItemBanks.ItemBankMirt4PL-NTuple{4, Any}","page":"Parametric item banks","title":"FittedItemBanks.ItemBankMirt4PL","text":"Convenience function to construct an item bank of the standard 4-parameter logistic MIRT model.\n\n\n\n\n\n","category":"method"},{"location":"parametric/#Composable-item-banks","page":"Parametric item banks","title":"Composable item banks","text":"","category":"section"},{"location":"parametric/","page":"Parametric item banks","title":"Parametric item banks","text":"The composable item banks allow flexible specification of item banks by combining different blocks to build a variety of model parameterisations.","category":"page"},{"location":"parametric/#FittedItemBanks.SlopeInterceptTransferItemBank","page":"Parametric item banks","title":"FittedItemBanks.SlopeInterceptTransferItemBank","text":"struct SlopeInterceptTransferItemBank <: AbstractItemBank\nSlopeInterceptTransferItemBank(distribution, difficulties, discriminations) -> SlopeInterceptTransferItemBank\nDomainType(::SlopeInterceptTransferItemBank) = OneDimContinuousDomain()\nResponseType(::SlopeInterceptTransferItemBank) = BooleanResponse()\n\nThis item bank corresponds the slope-intercept form of teh 2 parameter, single dimensional IRT model.\n\n\n\n\n\n","category":"type"},{"location":"parametric/#FittedItemBanks.TransferItemBank","page":"Parametric item banks","title":"FittedItemBanks.TransferItemBank","text":"struct TransferItemBank <: AbstractItemBank\nTransferItemBank(distribution, difficulties, discriminations) -> TransferItemBank\nDomainType(::TransferItemBank) = OneDimContinuousDomain()\nResponseType(::TransferItemBank) = BooleanResponse()\n\nThis item bank corresponds to a 2 parameter, single dimensional IRT model.\n\n\n\n\n\n","category":"type"},{"location":"parametric/#FittedItemBanks.CdfMirtItemBank","page":"Parametric item banks","title":"FittedItemBanks.CdfMirtItemBank","text":"struct CdfMirtItemBank <: AbstractItemBank\nCdfMirtItemBank(distribution, difficulties, discriminations) -> CdfMirtItemBank\nDomainType(::CdfMirtItemBank) = VectorContinuousDomain()\nResponseType(::CdfMirtItemBank) = BooleanResponse()\n\nThis item bank corresponds to the most commonly found version of MIRT in the literature. Its items feature multidimensional discriminations and its learners multidimensional abilities, but item difficulties are single-dimensional.\n\n\n\n\n\n","category":"type"},{"location":"parametric/#FittedItemBanks.SlopeInterceptMirtItemBank","page":"Parametric item banks","title":"FittedItemBanks.SlopeInterceptMirtItemBank","text":"struct SlopeInterceptMirtItemBank <: AbstractItemBank\nSlopeInterceptMirtItemBank(distribution, difficulties, discriminations) -> SlopeInterceptMirtItemBank\nDomainType(::SlopeInterceptMirtItemBank) = VectorContinuousDomain()\nResponseType(::SlopeInterceptMirtItemBank) = BooleanResponse()\n\nThis item bank corresponds to the slope-intercept version of MIRT in the literature. Its items feature multidimensional discriminations and its learners multidimensional abilities, but item difficulties are single-dimensional.\n\n\n\n\n\n","category":"type"},{"location":"parametric/#FittedItemBanks.NominalItemBank","page":"Parametric item banks","title":"FittedItemBanks.NominalItemBank","text":"struct NominalItemBank <: AbstractItemBank\nNominalItemBank(ranks, discriminations, cut_points) -> NominalItemBank\nDomainType(::NominalItemBank) = VectorContinuousDomain()\nResponseType(::NominalItemBank) = MultinomialResponse()\n\nThis item bank implements the nominal model. The Graded Partial Credit Model (GPCM) is implemented in terms of this.\n\nCurrently, this item bank only supports the normal scaled logistic as the characteristic/transfer function.\n\nSee also: GPCMItemBank (psuedo-constructor)\n\nReferences:\n\nEstimating item parameters and latent ability when responses are scored in two or more nominal categories,  Bock, D. R., (1972).  Psychometrika. \n\n\n\n\n\n","category":"type"},{"location":"parametric/#FittedItemBanks.GPCMItemBank-Tuple{Any, AbstractVector{<:AbstractArray{Float64}}}","page":"Parametric item banks","title":"FittedItemBanks.GPCMItemBank","text":"GPCMItemBank(discriminations, cut_points) -> NominalItemBank\n\nThis psuedo-constructor creates a NominalItemBank implementing the Graded Partial Credit Model (GPCM).\n\nReferences:\n\nA Generalized Partial Credit Model: Application of an EM Algorithm,  Muraki, E., (1992).  Applied Psychological Measurement. \nA Generalized Partial Credit Model,  Muraki, E. (1997).  In Handbook of Modern Item Response Theory. \n\n\n\n\n\n","category":"method"},{"location":"parametric/#FittedItemBanks.MonopolyItemBank","page":"Parametric item banks","title":"FittedItemBanks.MonopolyItemBank","text":"struct MonopolyItemBank <: AbstractItemBank\n\nDomainType(::MonopolyItemBank) = OneDimContinuousDomain()\nResponseType(::MonopolyItemBank) = BooleanResponse()\n\nThis item bank implements the monotonic polynomial model with dichotomous responses.\n\nmathrmirf(thetaxibf b)=xi+b_1theta+b_2theta^2+dots+b_2k+1theta^2k+1\n\nmathrmirf^prime(thetamathbfa)=a_0+a_1theta+a_2theta^2+cdotcdotcdot+a_2ktheta^2k\n\nReferences:\n\nMaximum Marginal Likelihood Estimation of a Monotonic Polynomial Generalized Partial Credit Model   with Applications to Multiple Group Analysis,  Falk, C.F., Cai, L. (2016).  Psychometrika. \n\n\n\n\n\n","category":"type"},{"location":"parametric/#FittedItemBanks.BSplineItemBank","page":"Parametric item banks","title":"FittedItemBanks.BSplineItemBank","text":"struct BSplineItemBank <: AbstractItemBank\n\nDomainType(::BSplineItemBank) = OneDimContinuousDomain()\nResponseType(::BSplineItemBank) = BooleanResponse()\n\nThis item bank implements the a bank with B-spline based item-responses with dichotomous responses.\n\nReferences:\n\nMaximum Marginal Likelihood Estimation of a   Monotonic Polynomial Generalized Partial Credit Model  Winsberg, S., Thissen, D. and Wainer, H. (1984)  ETS Research Report Series. \n\n\n\n\n\n","category":"type"},{"location":"interface/#Generic-interface","page":"Generic interface","title":"Generic interface","text":"","category":"section"},{"location":"interface/","page":"Generic interface","title":"Generic interface","text":"This page details the operations which should be supported by different ItemResponse elements, as well as traits for categorisation which can be used to dispatch to different operations.","category":"page"},{"location":"interface/#Basic-types","page":"Generic interface","title":"Basic types","text":"","category":"section"},{"location":"interface/#FittedItemBanks.AbstractItemBank","page":"Generic interface","title":"FittedItemBanks.AbstractItemBank","text":"abstract type AbstractItemBank\n\nBase supertype for all item banks.\n\n\n\n\n\n","category":"type"},{"location":"interface/#FittedItemBanks.ItemResponse","page":"Generic interface","title":"FittedItemBanks.ItemResponse","text":"struct ItemResponse{ItemBankT<:AbstractItemBank}\n\nitem_bank::AbstractItemBank\nindex::Int64\n\nAn item response.\n\n\n\n\n\n","category":"type"},{"location":"interface/#AbstractItemBank-traits","page":"Generic interface","title":"AbstractItemBank traits","text":"","category":"section"},{"location":"interface/#Domain","page":"Generic interface","title":"Domain","text":"","category":"section"},{"location":"interface/#FittedItemBanks.DomainType","page":"Generic interface","title":"FittedItemBanks.DomainType","text":"abstract type DomainType\n\nDomainType(::AbstractItemBank) -> DomainType\n\nDomain type for a item banks' item response functions. Used as a trait.\n\n\n\n\n\n","category":"type"},{"location":"interface/#FittedItemBanks.DiscreteDomain","page":"Generic interface","title":"FittedItemBanks.DiscreteDomain","text":"abstract type DiscreteDomain <: DomainType\n\nA discrete domain. Typically this is a sampled version of a continuous domain item bank.\n\nItem response functions with discrete domains tend to support less operations than those with continuous domains.\n\n\n\n\n\n","category":"type"},{"location":"interface/#FittedItemBanks.ContinuousDomain","page":"Generic interface","title":"FittedItemBanks.ContinuousDomain","text":"abstract type ContinuousDomain <: DomainType\n\nA continuous domain.\n\n\n\n\n\n","category":"type"},{"location":"interface/#FittedItemBanks.VectorContinuousDomain","page":"Generic interface","title":"FittedItemBanks.VectorContinuousDomain","text":"struct VectorContinuousDomain <: ContinuousDomain\n\nA continuous domain that is vector valued.\n\n\n\n\n\n","category":"type"},{"location":"interface/#FittedItemBanks.OneDimContinuousDomain","page":"Generic interface","title":"FittedItemBanks.OneDimContinuousDomain","text":"struct OneDimContinuousDomain <: ContinuousDomain\n\nA continuous domain that is scalar valued.\n\n\n\n\n\n","category":"type"},{"location":"interface/#FittedItemBanks.DiscreteIndexableDomain","page":"Generic interface","title":"FittedItemBanks.DiscreteIndexableDomain","text":"struct DiscreteIndexableDomain <: DiscreteDomain\n\nAn discrete domain which is efficiently indexable and iterable.\n\n\n\n\n\n","category":"type"},{"location":"interface/#FittedItemBanks.DiscreteIterableDomain","page":"Generic interface","title":"FittedItemBanks.DiscreteIterableDomain","text":"struct DiscreteIterableDomain <: DiscreteDomain\n\nAn discrete domain which is only efficiently iterable.\n\n\n\n\n\n","category":"type"},{"location":"interface/#Response","page":"Generic interface","title":"Response","text":"","category":"section"},{"location":"interface/#FittedItemBanks.ResponseType","page":"Generic interface","title":"FittedItemBanks.ResponseType","text":"abstract type ResponseType\n\nResponseType(::AbstractItemBank) -> ResponseType\n\nA response type for an item bank. Used as a trait.\n\n\n\n\n\n","category":"type"},{"location":"interface/#FittedItemBanks.BooleanResponse","page":"Generic interface","title":"FittedItemBanks.BooleanResponse","text":"struct BooleanResponse <: ResponseType\n\nA boolean/dichotomous response.\n\n\n\n\n\n","category":"type"},{"location":"interface/#FittedItemBanks.MultinomialResponse","page":"Generic interface","title":"FittedItemBanks.MultinomialResponse","text":"struct MultinomialResponse <: ResponseType\n\nA multinomial response, including ordinal responses.\n\n\n\n\n\n","category":"type"},{"location":"interface/#AbstractItemBank-methods","page":"Generic interface","title":"AbstractItemBank methods","text":"","category":"section"},{"location":"interface/#Base.length-Tuple{FittedItemBanks._DocsItemBank}","page":"Generic interface","title":"Base.length","text":"length(item_bank::AbstractItemBank)\n\nReturns the number of items in the item bank.\n\n\n\n\n\n","category":"method"},{"location":"interface/#FittedItemBanks.subset","page":"Generic interface","title":"FittedItemBanks.subset","text":"function subset(item_bank::AbstractItemBank, idxs)\n\nReturn a new item bank of the same type, with the items at the given indices.\n\n\n\n\n\n","category":"function"},{"location":"interface/#FittedItemBanks.subset_view","page":"Generic interface","title":"FittedItemBanks.subset_view","text":"function subset_view(item_bank::AbstractItemBank, idxs)\n\nSimilar to above, but allow the usage of views.\n\n\n\n\n\n","category":"function"},{"location":"interface/#FittedItemBanks.item_bank_domain","page":"Generic interface","title":"FittedItemBanks.item_bank_domain","text":"item_bank_domain(\n    item_bank::AbstractItemBank;\n    zero_symmetric,\n    items,\n    thresh\n) -> Tuple{Any, Any}\n\n\nGiven an item bank, this function returns the domain of the item bank, i.e. the range (lo, hi) which includes for each item the range in which the the item response function is changing.\n\n\n\n\n\n","category":"function"},{"location":"interface/#Base.eachindex-Tuple{AbstractItemBank}","page":"Generic interface","title":"Base.eachindex","text":"eachindex(item_bank::AbstractItemBank) -> Base.OneTo\n\n\nReturns an AbstractUnitRange of item indices for the item bank.\n\n\n\n\n\n","category":"method"},{"location":"interface/#FittedItemBanks.item_params-Tuple{AbstractItemBank, Any}","page":"Generic interface","title":"FittedItemBanks.item_params","text":"item_params(item_bank::AbstractItemBank, idx) -> NamedTuple\n\n\nReturns the raw parameters for the item at idx as a named tuple. This may return nothing for some item banks. This is debugging/informational use only. Use (ItemResponse)[@ref] for actual item response functions.\n\n\n\n\n\n","category":"method"},{"location":"interface/#ItemResponse-methods","page":"Generic interface","title":"ItemResponse methods","text":"","category":"section"},{"location":"interface/#FittedItemBanks.resp","page":"Generic interface","title":"FittedItemBanks.resp","text":"resp(ir::ItemResponse, θ) -> Float64  # For BooleanResponse item banks only\nresp(ir::ItemResponse, outcome, θ) -> Float64\n\nReturn the value of the item response outcome function for the item response ir, the outcome outcome and the ability values θ. For BooleanResponse item banks, outcome can be omitted in which case the outcome is assumed to be true.\n\n\n\n\n\n","category":"function"},{"location":"interface/#FittedItemBanks.resp_vec","page":"Generic interface","title":"FittedItemBanks.resp_vec","text":"resp_vec(ir::ItemResponse, θ) -> AbstractVector{Float64}\n\nReturn the vector value of the item response function for the item response ir, the outcome outcome and the ability values θ.\n\nThe outcome at each index corresponds with the indices returned by the responses function.\n\n\n\n\n\n","category":"function"},{"location":"interface/#FittedItemBanks.responses","page":"Generic interface","title":"FittedItemBanks.responses","text":"responses(ir::ItemResponse) -> Any\n\n\nReturns an AbstractVector of possible outcomes for a given (ItemResponse)[@ref].\n\n\n\n\n\n","category":"function"},{"location":"non_parametric/#Non-parametric-item-banks","page":"Non-parametric item banks","title":"Non-parametric item banks","text":"","category":"section"},{"location":"non_parametric/","page":"Non-parametric item banks","title":"Non-parametric item banks","text":"Non-parametric IRT models ","category":"page"},{"location":"non_parametric/#Sampled-and-smoothed-item-banks","page":"Non-parametric item banks","title":"Sampled and smoothed item banks","text":"","category":"section"},{"location":"non_parametric/#FittedItemBanks.DichotomousPointsItemBank","page":"Non-parametric item banks","title":"FittedItemBanks.DichotomousPointsItemBank","text":"struct DichotomousPointsItemBank{DomainT} <: PointsItemBank\n\nxs::Any\nys::Matrix{Float64}\n\nDomainType(::DichotomousPointsItemBank) = DiscreteIndexableDomain()\nResponseType(::DichotomousPointsItemBank) = BooleanResponse()\n\nAn item bank where all items have IRFs computed at a fixed grid across the latent/ability dimension specified as xs. The responses are stored in ys. In most cases this item banks will be coupled with a Smoother and wrapped in a DichotomousSmoothedItemBank.\n\n\n\n\n\n","category":"type"},{"location":"non_parametric/#FittedItemBanks.DichotomousSmoothedItemBank","page":"Non-parametric item banks","title":"FittedItemBanks.DichotomousSmoothedItemBank","text":"struct DichotomousSmoothedItemBank{P<:PointsItemBank, S<:Smoother} <: AbstractItemBank\n\nDichotomousSmoothedItemBank(item_bank::PointsItemBank, smoother::Smother)\nDomainType(::DichotomousSmoothedItemBank) = OneDimContinuousDomain()\nResponseType(::DichotomousSmoothedItemBank) = BooleanResponse()\n\n\n\n\n\n","category":"type"},{"location":"non_parametric/#FittedItemBanks.KernelSmoother","page":"Non-parametric item banks","title":"FittedItemBanks.KernelSmoother","text":"struct KernelSmoother{FunctionT} <: Smoother\n\nkernel::Any\nbandwidths::Vector{Float64}\n\nA smoother that uses a kernel to smooth the IRF. The bandwidths field stores the kernel bandwidth for each item.\n\n\n\n\n\n","category":"type"},{"location":"non_parametric/#FittedItemBanks.MultiGridDichotomousPointsItemBank","page":"Non-parametric item banks","title":"FittedItemBanks.MultiGridDichotomousPointsItemBank","text":"struct MultiGridDichotomousPointsItemBank <: PointsItemBank\n\nxs::ArraysOfArrays.VectorOfVectors{Float64, Vector{Float64}, Vector{Int64}, Vector{Tuple{}}}\nys::ArraysOfArrays.VectorOfVectors{Float64, Vector{Float64}, Vector{Int64}, Vector{Tuple{}}}\n\nAn item bank where all items each IRF has been computed on a potentially distrinct grid across the latent/ability dimension specified as xs. The responses are stored in ys. In most cases this item banks will be coupled with a Smoother and wrapped in a DichotomousSmoothedItemBank.\n\n\n\n\n\n","category":"type"},{"location":"non_parametric/#FittedItemBanks.NearestNeighborSmoother","page":"Non-parametric item banks","title":"FittedItemBanks.NearestNeighborSmoother","text":"struct NearestNeighborSmoother <: Smoother\n\nNearest neighbor/staircase smoother.\n\n\n\n\n\n","category":"type"},{"location":"non_parametric/#FittedItemBanks.Smoother","page":"Non-parametric item banks","title":"FittedItemBanks.Smoother","text":"abstract type Smoother\n\n\n\n\n\n","category":"type"},{"location":"non_parametric/#FittedItemBanks.gauss_kern-Tuple{Any}","page":"Non-parametric item banks","title":"FittedItemBanks.gauss_kern","text":"gauss_kern(u)\n\n\nA guassian kernel for use with KernelSmoother\n\n\n\n\n\n","category":"method"},{"location":"non_parametric/#FittedItemBanks.gridify-Tuple{Any, Any}","page":"Non-parametric item banks","title":"FittedItemBanks.gridify","text":"gridify(item_bank, xs)\n\n\nConverts a dichotomous item bank item_bank into a gridded item bank by evaluating the items at points xs.\n\n\n\n\n\n","category":"method"},{"location":"non_parametric/#FittedItemBanks.quad_kern-Tuple{Any}","page":"Non-parametric item banks","title":"FittedItemBanks.quad_kern","text":"quad_kern(u)\n\n\nA quadratic kernel for use with KernelSmoother\n\n\n\n\n\n","category":"method"},{"location":"non_parametric/#FittedItemBanks.uni_kern-Tuple{Any}","page":"Non-parametric item banks","title":"FittedItemBanks.uni_kern","text":"uni_kern(u)\n\n\nA uniform kernel for use with KernelSmoother\n\n\n\n\n\n","category":"method"},{"location":"#FittedItemBanks.jl","page":"Home","title":"FittedItemBanks.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This module provides abstract and concrete item banks, which store information about items and their parameters such as difficulty, most typically resulting from fitting an Item-Response Theory (IRT) model.","category":"page"},{"location":"#FittedItemBanks.FittedItemBanks","page":"Home","title":"FittedItemBanks.FittedItemBanks","text":"This module provides abstract and concrete item banks, which store information about items and their parameters such as difficulty, most typically resulting from fitting an Item-Response Theory (IRT) model.\n\n\n\n\n\n","category":"module"},{"location":"#Contents","page":"Home","title":"Contents","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\"interface.md\", \"parametric.md\", \"non_parametric.md\"]\nDepth = 1","category":"page"},{"location":"#Index","page":"Home","title":"Index","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"}]
}
